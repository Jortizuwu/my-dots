#  ╔═╗═╗ ╦╦ ╦╦╔═╔╦╗╦═╗╔═╗  - z0mbi3
#  ╚═╗╔╩╦╝╠═╣╠╩╗ ║║╠╦╝║    - https://github.com/gh0stzk/dotfiles
#  ╚═╝╩ ╚═╩ ╩╩ ╩═╩╝╩╚═╚═╝  - z0mbi3.zk@protonmail.com
#			z0mbi3 config..

# Show keybindings help
alt + F1
	KeybindingsHelp

super + t  
	alacritty

super + l 
  alacritty -o "window.padding.x=0" -o "window.padding.y=0" -e lvim

# Open Terminal (alacritty)
super + alt + Escape
	bspc quit
	
# Open floating Terminal
super + alt + Return
	OpenApps --floating

# Menu aplicaciones
super + d
	OpenApps --menu

# Theme Selector
alt + @space
	RiceSelector

# Scratchpad
super + alt + o
	tdrop -a -w 20% -h 25% -y 20% -x 10%  --class scratch alacritty --class=scratch

# Power off, Reboot, Log out, Lockscreen, kill an app
ctrl + super + alt + {p,r,q,l,k}
	{systemctl poweroff, systemctl reboot,bspc quit,physlock -d,xkill}

# Apps
shift + alt + {b,g,n,p,r,t,w,m,v,k}
	{firefox, \
	 geany, \
	 thunar, \
	 pavucontrol, \
	 OpenApps --ranger, \
	 telegram-desktop, \
	 whatsapp-nativefier --disable-gpu, \
	 env LD_PRELOAD=/usr/lib/spotify-adblock.so spotify --disable-gpu --no-zygote %U, \
	 OpenApps --nvim, \
	 OpenApps --music}

# Hide/Show Bar (Polybar and/or eww)
super + {h,u}
	HideBar {-h,-u}

# Cange transparency on focused window
ctrl + alt {plus,minus,t}
	{picom-trans -c -o +3, picom-trans -c -o -1, picom-trans -c -d}

# Screenshot Now
Print
	ScreenShoTer --now

# Screenshot Select
ctrl + Print
	ScreenShoTer --sel

# Screenshot in 10sa
alt + Print
	ScreenShoTer --in10

# Reload sxhkd
super + Escape
	pkill -USR1 -x sxhkd; dunstify -u low -i ~/.config/bspwm/assets/reload.svg 'sxhkd' 'The configuration file has been reloaded successfully!'

# Random wallpaper
super + alt + w
	feh -z --no-fehbg --bg-fill ~/.config/bspwm/rices/$RICETHEME/walls/

#
# bspwm hotkeys
#

# Reload BSPWM
super + alt + r
	bspc wm -r

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# EWW stuff
super+m 
	~/.config/eww/mybar/scripts/popup_music

# BSPWM stuff
super+s
    bspc desktop focused --layout next
super+shift+q
    ~/.bscripts/rofi.sh outopts
control+alt+space
	~/.bscripts/toggle_float.sh
super+shift+{k,j,h,l}
	play -v 0.4 ~/Documents/Sounds/tile.wav& ~/.bscripts/bsmove.sh {north,south,west,east}
super+{k,j,h,l}
	~/.bscripts/bselect.sh {north,south,west,east}
	
super+alt+l
	bspc node focused -z right 15 0
super+alt+h
	bspc node focused -z left -15 0
super+alt+k
	bspc node focused -z top 0 -15
super+alt+j
	bspc node focused -z bottom 0 15
super+{d,a}
	play -v 0.4 ~/Documents/Sounds/tile.wav& bspc node @/ -C {forward,backward}
alt+{d,a}
	play -v 0.4 ~/Documents/Sounds/tile.wav& bspc node first_ancestor -R {90,270}
super+e
	play -v 0.4 ~/Documents/Sounds/tile.wav& bspc node first_ancestor --balance 

control+shift+h
	bspc node focused -z right -15 0
control+shift+l
	bspc node focused -z left 15 0
control+shift+j
	bspc node focused -z top 0 15
control+shift+k
	bspc node focused -z bottom 0 -15
	
super+f
   if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
        bspc node focused -t fullscreen; \
    else \
        bspc node focused -t tiled; \
 fi;
super+KP_Add
	bspc config window_gap $(( 5 + `bspc config window_gap` ))
super+KP_Subtract
	bspc config window_gap $(( -5 + `bspc config window_gap` ))

control+alt+{k,j,h,l}
	bspc node --presel-dir \~{north,south,west,east}

control+alt+a
	if [[ ! -z "$(bspc query -N -n focused.normal)" ]]; then \
		bspc node focused -l above; \
	elif [[ ! -z "$(bspc query -N -n focused.above)" ]]; then \
		bspc node focused -l below; \
	else \
		bspc node focused -l normal; \
	fi;



# set the node flags
ctrl + alt {m,x,s,p,i}
	bspc node -g {marked,locked,sticky,private,hidden}

# Focused desktop window gaps scroll
super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 5 ))

# Global window gaps scroll
super + alt + button{4,5}
	bspc config window_gap $(( $(bspc config window_gap) {-,+} 5 ))

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
alt + {_,shift + }Tab
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + alt + {Left,Right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 10 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
alt + shift {Left,Down,Up,Right}
	bspc node -v {-10 0,0 10,0 -10,10 0}

# Manage brightness
XF86MonBrightness{Up,Down}
    sh Brightness {up,down}

# Volume control
XF86Audio{RaiseVolume,LowerVolume,Mute}
	Volume{ --inc, --dec, --toggle}

# Music Control
XF86Audio{Next,Prev,Play,Stop}
	MediaControl {--next,--previous,--toggle,--stop}
