echo "hello im z0mbi3"
clear
clear
shutdown
cls
clear
sudo shutdown now
clear
clear
shutdown
shutdown now
sudo shutdown now
clear
clear
 ls -a
clear
l
cd Desktop
clear
git clone https://github.com/Jortizuwu/my-dots
clear
ll
l
sudo pacman -Sy alacrity
sudo pacman -Sy alacritty
cargo install alacritty
pacman -S cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
sudo pacman -S cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
cargo install alacritty
rustup defautl stable
cargo install alacritty 
clear
git clone https://github.com/alacritty/alacritty.git\
cd alacritty
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup override set stable\
rustup update stable
cargo build --release
infocmp alacritty
sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH\
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg\
sudo desktop-file-install extra/linux/Alacritty.desktop\
sudo update-desktop-database
clear
clear
clear
sudo pacman -S kitty
clear
cd Desktop/my-dots
clear
cd kitty
cp -r ~/.config/kitty
cp -r . ~/.config/kitty
clear
clear
neofetch
clear
ls ls
al
l
clear
cd ~/.config
cpear
cllear
clear
code .
clear
bash
clear
clear
cd ~/.cache
mkdir wal
clear
cd Desktop/my-dots
cp -r . ~/.cache/wal
clear
bash
clear
code .
curl -sS https://starship.rs/install.sh | sh
clear
cd Desktop/my-dots
clear
CP /
clear
cp starship.toml ~/.config
clear
clear
cd Desktop/my-dots
clear
cd alacritty/~
cd Desktop/my-dots
clear
cp .gitconfig ~/
clar
clear
alacritty
clear
 cd Desktop/my-dots
clear
cp .git-credentials ~/
clear
polybar
clear
infocmp alacritty
sudo mkdir -p /usr/local/share/man/man1\
sudo mkdir -p /usr/local/share/man/man5\
scdoc < extra/man/alacritty.1.scd | gzip -c | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null\
scdoc < extra/man/alacritty-msg.1.scd | gzip -c | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null\
scdoc < extra/man/alacritty.5.scd | gzip -c | sudo tee /usr/local/share/man/man5/alacritty.5.gz > /dev/null\
scdoc < extra/man/alacritty-bindings.5.scd | gzip -c | sudo tee /usr/local/share/man/man5/alacritty-bindings.5.gz > /dev/null
clear
cat .zshrc
alacritty
clear
ranger
clear
clear
bash
ll
clear
cd bspwm
./bspwmrc
clear
./bspwm/bspwmrc
clear
./bspwm/bspwmrc
shutdown now
clear
sudo shutdown now
sudo poweroff
clear
git clone https://aur.archlinux.org/archlinux-tweak-tool-git.git
cd archlinux-tweak-tool-git
sudo makepkg 
sudo makepkg -i
clear
cat
pws
clear
cd archlinux-tweak-tool-git
makepkg -si
clear
alacritty
clear
alacritty
clear
htop
clear
sudo pacman -Syy
sudo pacman -S docker
clear
sudo pacman -S gnome-terminal
clear
clear
cd Downloads
clear
sudo pacman -U ./docker-desktop-4.21.1-x86_64.pkg.tar.zst
clear
code .zshrc
clear
zsh -h
lshw -c display
lspci | grep -i vga
clear
xrandr
clearls
clear
ls al
ls -al
clear
ls -al
clear
cd ./.config
sudo log out
clear
cd .config
code .
clear
./bspwm/bspwmrc
./bspwm/bspwmc
clear
./bspwm/bspwmrc
clear
clear
clear
sudo poweroff
./bspwm/bspwmrc
clear
history -h
history -help
clear
./bspwm/bspwmrc
clear
cd Downloads
clear 
sl
sudo tar xyz Bibata-Modern-Ice.tar.gz
sudo tar Bibata-Modern-Ice.tar.gz
r
sudo tar Bibata-Modern-Ice.tar.gz
clear
tar -xvf Bibata-Modern-Ice.tar.gz
cd Bibata-Modern-Ice
clear
clear
sudo cp -r Bibata-Modern-Ice /usr/share/icons
clear
sudo pacman -S gnome-tweaks
earcl
clear
sudo pacman -S alacritty
clear
sudo pacman -Syu
clear
sudo pacman -Syu
sudo pacman -Sy
clear
sudo pacman -Rcns alacritty
sudo pacman -S alacritty
rm alacritty
rmdir alacritty
rmdir -r alacritty
rm -r alacritty
clear
cd Desktop
clear
sudo pacman -S alacritty
clear
rustup override set stable\
rustup update stable
clear
pacman -S cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
sudo pacman -S cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
clearlear
clear
cargo build --release
cargo build --release --no-default-features --features=wayland
clear
cargo install alacritty
clear
clear
clear
sudo thunar
clear
clear
cllear
clear
clear
cd .config/alacritty
code .
clear
clear
ll
clear
clear
clear
exitt
clear
clear
cd Desktop/my-dots
clear
sudo poweroff
sudo pacman -Syu
clear
./bspwm/bspwmrc
clear
clear
./bspwm/bspwmrc
clear
clear
pacman -h 
clear
clear
sudo pacman -R gnome-tweaks
clear
sudo pacman -S spotify
clear
cd microsoft-edge-stable-bin
makepkg -si
clea
clear
sudo pacman -S --needed base-devel git\
git clone https://aur.archlinux.org/yay-git.git\
cd yay\
makepkg -si
cd yay-git
makepkg -si
clear
yay -Syu
clear
clar
clear
sudo yay -S google-chrome
clear
sudo pacman -R microsoft-edge-stable-bin
clear
clear
./bspwm/bspwmrc
echo $STY
xrandr --query
clear
./bspwm/bspwmrc
xrandr --query
clear
clear
cd des
clear
clear
./bspwm/bspwmrc
.
./bspwm/bspwmrc
clear
bspc query
bspc query -M
xrandr --query
clear
bspc query -M --names
clear
clear
clear
clearr
clear
s
ls -al
clear
cd microsoft-edge-stable-bin
cd 
cd microsoft-edge-stable-bin
clear
makepkg -si
clear
clear
cd microsoft-edge-stable-bin
makepkg -si
clear
sudo pacman -R microsoft-edge-stable-bin
clear
cd ./.config
cd microsoft-edge
rm -r microsoft-edge
cd microsoft-edge
clear
clear
code .
clear
cd microsoft-edge-stable-bin
makepkg -si
clear
sudo poweroff
clear
cd web
clear
pnpm -i
pnpm i
pnpm i -force
pnpm i --force
clear
git checkout jortiz.dev
clear
pnpm i
clear
clear
clear
pnpm i
clear
pnpm start:dev
cd web
pnpm start:dev
clear
pnpm dev:local
sudo pacman -S gnome-tweaks
clear
gnome-tweaks
sudo gnome-tweaks
clearlear
clear
cd Downloads
tar -xvf cascadia-code-2111.01.tar.gz
clear
sudo mv cascadia-code-2111.01 /home/jortiz/.local/share/fonts/
cleaer
unzip CascadiaCode-2111.01.zip
sudo pacman -S zip
clear
unzip CascadiaCode-2111.01.zip
zip -u CascadiaCode-2111.01.zip
rm cascadia-code-2111.01.tar.gz
rm Bibata-Modern-Ice
rm r Bibata-Modern-Ice
rm -r Bibata-Modern-Ice
rm Bibata-Modern-Ice.tar.gz
zip  -h
zip CascadiaCode-2111.01.zip
sudo pacman -S unzip
unzip CascadiaCode-2111.01.zip
clear
clear
clear
sudo thunar
ls -al
clear
alacritty-themes
clear
ls -la
clear
clear
cd ~/.config/bspwm/
nano sxhkdrc
clear
cd ~/.config/
cd alacritty
nano alacritty.yml
cl
clear
nano alacritty.yml
clear
clear
gnome
clear
clear
git clone https://aur.archlinux.org/gnome-browser-connector.git\
cd gnome-browser-connector\
makepkg -si
clear
gnome-browser-connector
sudo pacman -U gnome-browser-connector
pacman -h
sudo pacman -R gnome-browser-connector
rm -r gnome-browser-connector
sudo rm -r gnome-browser-connector
clear
sudo pacman -R gnome-tweaks
sudo pacman -Syu
clear
clear
npm i -g pnpm
clear
pnpm i
cd web
pnpm i
code .
clear
clear
clear
cd Desktop
clear
mkdir others
cd others
clear
git clone https://github.com/CarlosSalasCarpio/tmb-mvp-fer
clear
cat .git-credentials
git config --global credential.helper store
 git config â€ƒ³list
git config --global credential.helper store
clear
git config --list
git lg
clear
nano .git-credentials
clear
cat .git-credentials
clear
cd Desktop/others
clear
git clone https://github.com/CarlosSalasCarpio/tmb-mvp-fer
clear
 cd tmb-mvp-fer
clear
rm pnpm-workspace.yaml
cd web
ls -al
ls -al
clear
cd web
clear
pnpm i
clear
node -v
npm -v
clear
bash
clear
cd Desktop/others
clear
ll -al
clar
clear
LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)
sudo pacman -S neovin
sudo pacman -S neovim
LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)
clear
lvim
bash
clear
sudo pacman -S xcursor-themes
sudo pacman -S xcursor
clear
sudo pacman -R gnome-tweaks
sudo pacman -R gnome
sudo pacman -R gnome-settings-deamon
sudo pacman -R gnome-settings-daemon
sudo pacman -R gnome*
sudo pacman -R --purge gnome*
sudo pacman -R --purge gnome
sudo pacman -Rns gnome
clear
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
clear
clear
clear
cd .config
clear
cd bspwm
code picom.conf
code .
./bspwm/bspwmrc
clear
./bspwm/bspwmrc
clear
s
clear
sudo pacman -Syu
clear
dconf watch /\
/org/gnome/desktop/interface/cursor-theme\
  'crystalblue_class
clear
cd ~/.icons
cd default
cat index.theme
nano index.theme
clear
nano index.theme
clear
nano index.theme
clear
sudo pacman -S lxappearance
sudo pacman -S breeze-cursor-theme
lxappearance
clear
cd 
cd Desktop/others
clear
git clone https://github.com/Crhis35/rankcv-admin
cd rankcv-admin
clear
code .
git branch
clear
yarn
npm i -g yarn
clear
bash
bash
clear
clear
npm 
npm -v
clear
clear
sudo pacman -S npm
npm -v
clear
node -v
clear
npm -v
clear
bash
cd Desktop/others
cd rankcv-admin
clear
sudo npm i -g yarn
clear
yarn
clear
sudo pacman -S postman
clear
clear
clar
clear
cd Desktop/others/rankcv-admin
clcar
clear
code .
yarn start
clear
cd Desktop
clear
mkdir my-projects
clear
npx create vite
npx create vite-app
npx vite create
clear
cd create
clear
rm -r create
clear
cd my-projects
clear
clear
yarn create vite
cd catalog-client
clear
yarn 
clear
clear
code .
clear
yarn add react-router-dom redux-persist 
yarn add -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
clear
yarn add react-hot-toast @iconscout/react-unicons
yarn add -D @types/iconscout__react-unicons
clear
yarn start
clear
npm i --save-dev @types/iconscout__react-unicons
clear
yarn dev
git checkout dev
clear
clear
cd Desktop/my-projects
clear
git clone https://github.com/Jortizuwu/lalali-client
clear
clear
cd lalali-client
clear
code .
ls -al
rm .git
rm -r .git
sudo rm -r .git
clear
ls -la
clear
clear
clear
mv lalali-client ./catalog-client
clear
cd catalog-client
clear
code .
rm catalog-client
rmdir catalog-client
clear
rmdir -r catalog-client
rmdir -f catalog-client
rm -r catalog-client
clear
cd my-projects
clear
git clone https://github.com/Jortizuwu/lalali-client
mv lalali-client catalog-client
cd catalog-client
clear
sudo rm -r .git
clear
code .
yarn 
clear
yarn 
clear
yarn
clear
yarn i
yarn
clear
pnpm i
clear
npm i -g pnpm
clear
sudo npm i -g pnpm
clear
pnpm i
ifconfig
clear
cd Desktop/my-projects/
rm -r catalog-client
clear
git clone https://github.com/Jortizuwu/lalali-client
clear
clear
mv lalali-client catalog-client
cd catalog-client
clear
git checkout dev
clear
code .
clear
rm -r .git
sudo rm -r .git
clear
cd Desktop/my-projects/
lks
clear
mv catalog-client catalog-client-ts
clear
yarn create vite
cd catalog-client-ts
code .
clear
yarn add yup redux-persist reactjs-popup react-slick react-select react-router-dom react-query react-redux react-query react-modal react-hot-toast react-hook-form react-files react-dropzone     "": "^1.4.0",\

yarn add yup redux-persist reactjs-popup react-slick react-select react-router-dom react-query react-redux react-query react-modal react-hot-toast react-hook-form react-files react-dropzone     react-date-range react-currency-input-field react-color-extractor rc-collapse dayjs date-fns axios @reduxjs/toolkit @react-spring/web @popperjs/core @iconscout/react-unicons @hookform/resolvers\

clar
yarn add yup redux-persist reactjs-popup react-slick react-select react-router-dom react-query react-redux react-query react-modal react-hot-toast react-hook-form react-files react-dropzone     react-date-range react-currency-input-field react-color-extractor rc-collapse dayjs date-fns axios @reduxjs/toolkit @react-spring/web @popperjs/core @iconscout/react-unicons @hookform/resolvers\

clear
yarn add -D pinst postcss prettier tailwindcss lint-staged husky eslint-config-prettier autoprefixer 
clear
yarn prepare
clear
git add .
git init
clear
yarn prepare
clear
yarn dev
cd Desktop/my-projects/catalog-client-ts
rename 's/\.html$/\.txt/' *.html
clear
git add .
git commit -m "frist commit"
yarn prepare
git add .
git commit -m "frist commit"
clear
shutdown now
sudo poweroff
clear
clear
bash
cd Downloads
clear
tar -xvf WhiteSur-Dark-solid-nord.tar.xz
clear
clear
history -h
history -help
ls -la
cat .zshrc
cat .zshenv
clear
cd .config/
cat zsh/zhistory
cleae
clear
history 
clear
bash
lxappearance
clear
sudo pacman -S lightdm-gtk-greeter-settings
sudo pacman -S lightdm-gtk-greeter-settings\

sudo pacman -S artix-greeter-settings\

sudo pacman -S sddm-config-editor\

clear
sudo pacman -S lightdm
lightdm
sudo lightdm
clear
dm-tool --help
sudo pacman -S sddm-config-editor\

clear
sddm
clear
man init
sudo man init
clear
e
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
ls /etc/init.d
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
shutdown now
sudo poweroff
yarn dev
clear
git add .
git commit -m "frist commit"
clear
git add .
git commit -m "change logo"
clear
yarn dev
git add .
git commit -m "feat: nose xd"
clear
git branch -M main\
git remote add origin https://github.com/Jortizuwu/catalog-clent.git\
git push -u origin main
cd Downloads
clear
ll -al
clear
clear
lxappearance
sudo lxappearance
clear
cd .themes
l
clear
ll
clear
sudo pacman -Syu
clear
l
cd .config/alacritty
lvim alacritty.yml
clear
clear
clear
cd .config/alacritty
alacritty-themes
clea
rclear
clear
lvim alacritty.yml
clear
cd .config/bspwm
lvim sxhkdrc
clear
alacritty -vv
alacritty -o font.size=8
alacritty -o font.size=10
clear
clear
clear
alacritty-themes
clear
clar
clear
clear
lls
clear
cd .config/bspwm/rices/emilia
lvim config.ini
clear
cd Desktop
mkdir courses
cd courses
mkdir nestjs
cd nestjs
git clone https://github.com/Jortizuwu/teslo-shop
clear
cd teslo-shop
clear
ll -al
pnpm i
clear
docker-compose up -d
docker compose up -d
clear
code .
clear
docker compose up -d
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
clear
sudo yay -S postman
yay -S postman
clear
yay -S dbeaver-ce
yay -S dbeaver
clear
java -v
java --version
clear
java
clear
bash
docker start
clear
java -v 
clear
yay -S tableplus
clear
nest g res auth --no-spec
npm i -g @nestjs/cli
sudo npm i -g @nestjs/cli
clear
nest g res auth --no-spec
clear
cd Desktop/courses/nestjs/teslo-shop
clear
docker compose up -d
clear
docker compose up -d
rc-service docker start
rc-service docker.sock start
clear
docker compose up -d
clear
clear
pnpm start:dev
clear
pnpm install bcrypt
clear
pnpm -D @types/@types/bc
pnpm -D @types/bcrypt
pnpm install -D @types/bcrypt
clear
pnpm i @nestjs/passport passport
pnpm i @nestjs/jwt passport-jwt
pnpm i -D @types/passport-jwt
clear
pnpm start:dev
shutdown now
sudo poweroff
clear
cleare
clear
docker compose up -d
clear
clear
pnpm start:dev
clear
pnpm start:dev
docker compose up -d
clear
 systemctl start docker
rc start docker
sudo rc start docker
clear
sudo rc-service docker start
rc-service docker start
rc-service docker.sock start
clear
nest g d auth/decorators/roleProtected --no-spec
clear
git add .
git commit -m "feat: auth create"
clear
git amed 
clear
curl http://localhost:3000/api/auth/login
curl -X POST http://localhost:3000/auth/login -d '{"username": "john", "password": "changeme"}' -H "Content-Type: application/json"
curl -X POST http://localhost:3000/api/auth/login -d '{"username": "john", "password": "changeme"}' -H "Content-Type: application/json"
clear
curl -X POST http://localhost:3000/api/auth/login -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json"
curl -X POST http://localhost:3000/api/auth/private -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json"
curl -X GET http://localhost:3000/api/auth/private -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json"
curl -X GET http://localhost:3000/api/auth/private -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json, Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Impvc2VAam9zZS5jb20iLCJpYXQiOjE2ODkzNjE0OTMsImV4cCI6MTY4OTM2ODY5M30.zJgsyhfctFDUz9WI4kV3RI1lji2_RFVvfXU_PEobQcc"
curl -X GET http://localhost:3000/api/auth/private -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Impvc2VAam9zZS5jb20iLCJpYXQiOjE2ODkzNjE0OTMsImV4cCI6MTY4OTM2ODY5M30.zJgsyhfctFDUz9WI4kV3RI1lji2_RFVvfXU_PEobQcc"
curl -X GET http://localhost:3000/api/auth/private2 -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Impvc2VAam9zZS5jb20iLCJpYXQiOjE2ODkzNjE0OTMsImV4cCI6MTY4OTM2ODY5M30.zJgsyhfctFDUz9WI4kV3RI1lji2_RFVvfXU_PEobQcc"
cd Desktop/courses/nestjs/teslo-shop
clear
pnpm start:dev
clear
nest g gu src/auth/guards/userRole --no-spec
nest g gu auth/guards/userRole --no-spec
clear
pnpm start:dev
shutdown now
clear
sudo poweroff
sudo pacman -Syu
clear
ll -al
sudo pacman -Rns archlinux-tweak-tool-git
clear
rm -r archlinux-tweak-tool-git
sudo rm -r archlinux-tweak-tool-git
clear
clear
lxappearance
clear
clear
clear
clear
clear
cd Desktop
cd my-dots/ls
cd my-projects
clear
mkdir todo-app
cd todo-app
clear
nest new todo-server
cd todo-app
cd todo-server
clear
code .
clear
git add .
git commit -m "frist commit"
clear
clear
git checkout dev
git checkout -m dev
clear
git branch dev
clear
git checkout dev
clear
clear
nest g res auth --no-spec
clear
pnpm i @nestjs/typeorm typeorm 
clear
pnpm i @nestjs/typeorm typeorm 
clear
killall node
killall npm
killall pnpm
clear
pnpm i @nestjs/typeorm typeorm 
clear
pnpm i @nestjs/typeorm typeorm 
clear
pnpm i @nestjs/typeorm typeorm 
clear
npm i @nestjs/config
pnpm i @nestjs/config
clear
pnpm -D husky
pnpm i -D husky
clear
pnpm prepare
clear
pnpm i -D lint-staged
clear
clear
clear
cd courses
clear
cd nestjs
cd teslo-shop
cat docker-compose.yaml
clear
cat .gitignore
clear
clear
nest g res user --no-spec
clear
docker compose up -d
clear
pnpm start:dev
pnpm i pg
clear
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
clear
cat ~/Desktop/courses/nestjs/teslo-shop/.env
pnpm start:dev
clear
docker compose up -d
clear
pnpm start:dev
clear
pnpm start:dev
clear
cat ~/Desktop/courses/nestjs/teslo-shop/src/main.ts
clear
cat ~/Desktop/courses/nestjs/teslo-shop/src/app.module.ts
CLEAR
clear
clera
clear
docker compose up -d
clear
pnpm start:dev
clear
cat ~/Desktop/courses/nestjs/teslo-shop/.env
clear
docker compose up -d
clear
docker compose up -d
clear
docker compose up -d
clear
pnpm start:dev
clear
clear
docker compose up -d
clear
pnpm start:dev
cd ~/Desktop/courses/nestjs/teslo-shop/.env
cd ~/Desktop/courses/nestjs/teslo-shop
clear
docker compose up -d
clear
pnpm start:dev
clear
docker compose up -d
clear
docker compose up -d
clear
pnpm start:dev
clea
clear
docker compose up -d
clear
pnpm start:dev
clear
pnpm remove @nestjs/mapped-types
pnpm i @nestjs/mapped-types@2.0.2
clear
docker compose up -d
clear
pnpm start:dev
clear
docker compose up -d
pnpm start:dev
clear
docker compose up -d
clar
clear
docker compose up -d
pnpm start:dev
clear
pnpm start:dev
clear
docker compose up -d
clear
pnpm start:dev
clear
docker compose stop -d
docker compose stop 
clear
docker compose up -d
clear
docker compose up -d
clear
pnpm start:dev
clear
docker compose up -d
clear
docker compose up -d
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
pnpm i class-validator class-transformer
pnpm start:dev
clear
docker compose up -d
clear
pnpm start:dev
clear
sudo rm postgres
sudo rm -r postgres
clear
docker compose up -d
clear
docker compose up -d
clear
clear
git add .
git status
git commit -m "feat:postgres db add with docker" -m "user and auth module creates" 
clear
;s
git lg
clear
docker compose up -d
clear
pnpm start:dev
clecar
clear
pnpm start:dev
clear
pnpm start:dev
clear
cd ~/Desktop/my-projects/todo-app/todo-server
clear
pnpm start:dev
sudo poweroff
clear
clear
ls -al
clear
sudo service docker start
clear
sudo service docker start
sudo systemctl start docker
sudo dockerd\
\

clear
clear
docker compose up -d
clear
sudo dockerd &
clear
docker compose up -d
clear
sudo dockerd -d
dockerd --help
clear
docker compose up -d
clear
cd ~/Desktop/courses/nestjs/teslo-shop/src/auth/
cat auth.service.ts
pnpm i @nestjs/jwt passport-jwt
clear
cd ~/Desktop/courses/nestjs/teslo-shop/src/auth
git add .
git commit -m "last commit"
git push 
clear
pnpm i @nestjs/passport passport
clear
nest -h
nest mo common
nest g mo common --no-spec
clear
cd ~/Desktop/my-projects/todo-app/todo-server
clear
pnpm start:dev
clear
pnpm start:dev
clear
curl -X POST http://localhost:3000/api/auth/private -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json"
clear
sudo poweroff
clear
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
cd ~/Desktop/my-projects/todo-app/todo-server
docker compose up -d
clear
pnpm start:dev
sudo poweroff
git add .
git commit -m "auth fernando"
clear
git branch -M auth
git branch dev
git checkout dev
clear
nest g res auth --no-spec
clear
pnpm i -D @types/passport-jwt
clear
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
cd ~/Desktop/my-projects/todo-app/todo-server
lvim
pnpm start:dev
clear
clear
clear
sudo poweroff
clear
docker compose up -d
clear
cd ~/Desktop/my-projects/todo-app/todo-server
pnpm start:dev
pnpm i bcrypt
clear
pnpm i -D @types/bcrypt
clear
git add ,
git add .
git status
git commit -m "feat: auth create"
clear
clear
clear
git add .
git ammed 
git commit --amend -m "husky test"
clear
pnpm lint
pnpm format
clear
pnpm lint
pnpm lint-staged
clear
pnpm lint-staged
clear
pnpm lint-staged
git add .
git commit --amend -m "husky test"
clear
git add .
git commit --amend -m "husky test"
git add .
git commit --amend -m "husky test"
git add .
git commit --amend -m "husky test"
clear
git add .
git commit --amend -m "husky test"
clear
git add .
git commit -m "test husky 2"
chmod ug+x .husky/*\
chmod ug+x .git/hooks/*
git add .
git commit -m "test husky 2"
clear
git add .
git commit -m "test husky 2"
clear
git add .
git commit -m "test husky 3"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
clear
git add .
git commit -m "test husky 4"
clear
git add .
git commit -m "test husky 4"
git add .
git commit -m "test husky 4"
clear
git status
clear
git lg
clear
git log
git rebase -i HEAD~3
git add .
git commit -m "test husky 4"
clear
git rebase -i HEAD~3
clear
git log
clear
git rebase -i
clear
git lg
git rebase -i HEAD~10
clear
git lg
git add .
clear
git lg
clear
git log
git rebase -i 1c0cc83df887074994a80578a495d29dcc645dd8
clear
git lg
clear
git reset --soft 1c0cc83df887074994a80578a495d29dcc645dd8
git commit -m "feat: auth create"
clear
git lg
clear
sudo poweroff
clear
nest g res role --no-spec
clear
cd ~/Desktop/my-projects/todo-app/todo-server
clear
pnpm start:dev
cd ~/Desktop/my-projects/todo-app/todo-server
pnpm start:dev
clear
pnpm start:dev
clear
pnpm start:dev
clear
sudo poweroff
clear
pnpm start:dev
clear
git add .
git status
clear
git commit -m "feat: role entity create"
clear
nest g res todo --no-spec
clear
pnpm start:dev
clear
pnpm start:dev
clear
sudo poweroff
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
curl -X POST http://localhost:3000/api/todo -d '{"email": "jose@jose.com", "password": "Jose1199#"}' -H "Content-Type: application/json"
clear
pnpm start:dev
sudo poweroff
clear
clear
sudo pacman -Syu
clear
sudo poweroff
clear
pnpm start:dev
CLEAR
clear
pnpm start:dev
clear
sudo poweroff
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
git add .
git commit -m "feat todo add"
clear
clear
clear
cd ~/Desktop/my-projects/todo-app/todo-server
clear
clear
pnpm start:dev
sudo poweroff
cd Desktop/
cd my-projects
clear
rm -r catalog-client-ts
clear
cd todo-app
clear
npx create-expo-app todo-client
clear
pnpm create-expo-app todo-client
rm -r todo-client
clear
pnpm create expo
clear
cd todo-client
clear
pnpm install
clear
code .
cls
clear
rm -r todo-client
sudo rm -r todo-client
clear
npx create-expo-app -t expo-template-blank-typescript
clear
npx create-expo-app -t expo-template-blank-typescript
clear
sudo rm -r todo-client
clear
npx create-expo-app -t expo-template-blank-typescript
pnpm create expo -t expo-template-blank-typescript
clear
cd todo-client
clear
code .
clear
yarn add -D eslint eslint-config-prettier @react-native-community/eslint-config
pnpm install
clear
pnpm install
pnpm install @react-navigation/native
clear
clear
pnpm install -D husky
pnpm install -D lint-staged
pnpm prepare
clear
touch .lintstagedrc.json
echo .lintstagedrc.json {\
  "**/*.{js,ts}": ["pnpm lint", "pnpm format"]\
}
clear
pnpm lint
clear
pnpm lint
clear
pnpm format
clear
pnpm format
pnpm lint
clear
pnpm init @eslint/config
clear
npx eslint src/App.tsx
clear
pnpm install -D eslint-config-universe
pnpm install -D eslint-config-universe eslint prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser
clear
pnpm install -D eslint-plugin-prettier
clear
pnpm i -D eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
clear
pnpm i -D eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
clear
pnpm lint
clear
pnpm lint
clea
clear
npx eslint src/App.tsx
pnpm remove eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
pnpm lint
clear
pnpm lint
clear
pnpm lint
clear
pnpm i -D eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
pnpm remove @react-native-community/eslint-config
clear
clear
git add .
git commit -m "first commit"
chmod ug+x .husky/*\
chmod ug+x .git/hooks/*
clear
git add .
git commit --amend -m "husky test"
git commit --amend -m "first commit"
clear
pnpm start
npx expo install @types/react@~18.0.27
pnpm expo install @types/react@~18.0.27
pnpm start
clear
pnpm expo start
cd Desktop/my-projects/catalog-client-ts
cd Desktop/my-projects/todo-app/todo-server/
cat package.json
clear
cat .lintstagedrc.json
cat package.json
clear
cat .husky/pre-commit
sudo poweroff
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clea
rclear
clear
lear
clear
clear
cd .expo
cd native-modules-cache
clear
npm install -g expo-cli
sudo npm install -g expo-cli
clear
cd Desktop
expo create
clear
expo -h
expo init
sudo npm remove -g expo-cli
clear
npx expo init
clear
 npx create-expo-app instead
clear
cd instead
rm -r instead
clear
npx create-expo-app --template
clear
cd test
code /
code .
clear
clear
pnpm expo start
clear
pnpm expo start
clear
pnpm expo start
npm start
clear
npm start
clear
history 
cd Desktop
rm -r test
sudo rm -r test
cd my-projects
cd todo-app
clear
mv todo-client todo-client-no
clear
history 
npx create-expo-app --template
npx create-expo-app --template --use-yarn
npx -p pnpm create-expo-app --template
npx create-expo-app --template
clear
npx create-expo-app --template
npx create-expo-app --template
clear
cd todo-client
code .
pnpm i -D eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
pnpm i
clear
cd todo-client-no
code .
pnpm -D husky
pnpm i -D husky
clear
pnpm i -D lint-staged
clear
pnpm i -D lint-staged
clear
git add .
clear
git lg
clear
git lg
clear
sudo rm -r .git
clear
git add .
git init
git add .
git commit -m "first commit"
clear
pnpm prepare
clear
chmod ug+x .husky/*\
chmod ug+x .git/hooks/*
clear
git add .
git commit -m "husky test"
clear
cd todo-client-no
cat .husky/pre-commit
clear
git add .
git commit --amend -m "husky test"
chmod ug+x .husky/*\
chmod ug+x .git/hooks/*
clear
git add .
git commit --amend -m "husky test"
clear
cd test
code .
clear
sudo rm -r test
sudo rm -r todo-client-no
clear
sudo poweroff
git lg
clear
l
clear
pnpm start
npx expo start --clear
pnpm start
npx expo start --clear
clear
pnpm start
npx expo start --clear
clear
cd Desktop/my-projects/todo-app/todo-server
clear
yarn create expo-app AwesomeProject -t
clear
cd AwesomeProject
code .
yarn start
cd todo-client
code .
yarn add -D eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
yarn add -D lint-stage
yarn add -D lint-staged
clear
cd Desktop/my-projects/todo-app/todo-server
sudo rm -r todo-client
mv AwesomeProject todo-client
clear
clea
cd todo-client
clear
code .
cd Desktop/my-projects/todo-app/todo-client
clear
yarn add native-base
chmod ug+x .husky/*\
chmod ug+x .git/hooks/*
clear
yarn add -D husky
expo install react-native-svg@12.1.1 react-native-safe-area-context@3.3.2
npm install --global expo-cli
sudo npm install --global expo-cli
expo install react-native-svg@12.1.1 react-native-safe-area-context@3.3.2
npm removr --global expo-cli
npm remove --global expo-cli
sudo npm remove --global expo-cli
yarn add react-native-svg@13.4.0 react-native-safe-area-context@4.5.0
clear
yarn start
clear
yarn start
clear
yarn start
c.ear
clear
yarn add react-native-gesture-handler
clear
yarn lint-staged
clear
yarn lint-staged
clear
cd Desktop
clear
yarn remove react-native-gesture-handler
yarn add react-native-gesture-handler@~2.9.0
clear
yarn lint
yarn add -D eslint
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn
clear
npx install-peerdeps --dev eslint-config-airbnb
clear
yarn lint
clear
yarn lint
clear
yarn format
yarn add @react-navigation/native
npx expo install react-native-screens react-native-safe-area-context
clear
yarn add @react-navigation/native-stack\
\

clear
yarn add @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons
clear
git add .
git lg
git commit -m "inital config"
clear
yarn add  -D @react-native-community/eslint-config
yarn remove eslint-config-airbnb  @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
clear
yarn remove eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks
clear
yarn lint
yarn add -D prettier
clear
yarn lint
yarn prettier
yarn format
clear
yarn add --dev eslint prettier @react-native-community/eslint-config
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
clear
yarn start
lc
clear
yarn start
sudo poweroff
cd /boot/grub
cd themes
cd themes
cd Vimix
clear
ranger
clear
cd .
clear
git clone https://github.com/Lxtharia/minegrub-theme.git
sudo git clone https://github.com/Lxtharia/minegrub-theme.git
grub-mkconfig -V
clear
cd minegrub-theme
cd 
cd /etc/default
lvim grub
sudo lvim grub
clear
sudo grub-mkconfig -o /boot/grub/grub.cfg
clear
history 
cd /etc/default
sudo lvim grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
clear
yarn add -D  eslint-config-airbnb-typescript
clear
yarn lint
clear
yarn remove eslint-config-airbnb-typescript
clear
yarn add -D i -D eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-universe
yarn add -D eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-universe
clear
yarn add -D eslint prettier eslint-plugin-react eslint-plugin-import eslint-plugin-jsx-a11y @typescript-eslint/eslint-plugin eslint-config-airbnb-typescript eslint-config-prettier
clear
yarn linit
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn lint
clear
yarn add -D @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier
clear
npx install-peerdeps --dev eslint-config-airbnb
clear
yarn lint
clear
yarn lint
clear
yarn lint
yarn i -S @expo/vector-icons
yarn add -S @expo/vector-icons
clear
yarn lint
yarn add -D @expo/vector-icons
clear
yarn add -S @expo/vector-icons
yarn add @expo/vector-icons
clear
yarn lint
clear
yarn start
clear
yarn lint
clear
yarn start
clear
sudo powe
clear
sudo poweroff
clear
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
yarn start
clear
yarn start
yarn
clear
yarn start
clear
yarn start
clear
yarn start
clear
yarn start
clear
git add .
git log
clear
git commit -m "inital config"
clear
yarn start
npx expo start --clear
sudo poweroff
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
cd Desktop
cd others
clear
mkdir open-dots
cd open-dots
git clone https://github.com/vinceliuice/grub2-themes
sudo ./install.sh -b -t tela
cd grub2-themes
sudo ./install.sh -b -t tela
clear
cd /etc/default
clear
history 
cd /etc/default
cat grub
cd /boot/grub
cd themes
cd Vimix
ranger
sudo mv wallpaperflare.com_wallpaper8.jpg ../tela/background.jpg
clea
clear
ranger
cd Desktop/open-dots/grub2-themes
clear
history 
sudo ./install.sh -b -t tela
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
sudo pacman -Sy sddm
sddm
sudo sddm
sudo poweroff
sddm -h
clear
sudo update-alternatives --set default-displaymanager /usr/lib/X11/displaymanagers/sddm
clear
cd /usr/lib/xfce4/session
l
lw
clear
clear
sudo lvim /etc/conf.d/openrc-settingsd
rc-update add xdm
ln -s /etc/runit/sv/sddm /run/runit/service/sddm
clear
cd Desktop/open-dots
clear
git clone https://github.com/qtilities/sddm-conf/
cd sddm-conf
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -B build\
make -C build\
make DESTDIR="$(pwd)/package" install -C build
clear
sudo rc-update add sddm default\

clear
sudo pacman -S sddm-config-editor\

sudo pacman -S sddm
clear
sudo rc-update add sddm default\

clear
sudo rc-service
sudo rc-update add display-manager default\

clear
cat /usr/lib/sddm/sddm.conf.d
cat /usr/lib/sddm/sddm.conf.d/default.conf
sudo systemctl disable lightdm && sudo systemctl enable sddm
clea
clear
cd Downloads
clear
sudo tar -xzvf ~/Downloads/sugar-dark.tar -C /usr/share/sddm/themes
clear
sudo pacman -S qt5 qt5-svg qt5-quickcontrols2
clear
sudo poweroff
cd Downloads
sudo tar -xzvf ~/Downloads/sugar-dark.tar.gz -C /usr/share/sddm/themes
sudo tar -xzvf ~/Downloads/sugar-dark.tar.gz -C /usr/share/sddm/themes
clear
sudo tar -xzvf ~/Downloads/sugar-dark.tar.gz -C /usr/share/sddm/themes
cd /usr/share/sddm/themes/
clear
clear
cd /usr/share/sddm/themes/
clea
clear
cd /usr/lib/sddm
lvim sddm.conf.d/default.conf
sudo lvim sddm.conf.d/default.conf
clear
sudo sddm
sddm 
sudo sddm
sudo pacman -S qt5 qt5-svg qt5-quickcontrols2
sudo pacman -S displaymanager-openrc\
sudo rc-update add xdm default\
sudo nano /etc/conf.d/xdm
sudo pacman -S displaymanager-openrc
rc-update add display-manager default
nano /etc/sddm.conf.d/autologin.conf
clear
history 
sudo pacman -S qt5 qt5-svg qt5-quickcontrols2
sudo pacman -Rns qt5 qt5-svg qt5-quickcontrols2
sudo pacman -Rns qt5 qt5-svg qt5-quickcontrols2 qt5-base
sudo pacman -R qt5 qt5-svg qt5-quickcontrols2
clear
sudo pacman -Rns qt5 
sudo pacman -Rns qt5-base
clear
sudo pacman -R qt5
clear
sudo pacman -Rns sddm
clear
sudo pacman -Rns qt5
sudo pacman -Rdd qt5 qt5-svg qt5-quickcontrols2
clear
cd Desktop/open-dots
git clone https://aur.archlinux.org/lightdm-webkit2-theme-glorious.git\
 cd lightdm-webkit2-theme-glorious\
 makepkg -sri
clear
clear
yay -Syu lightdm-webkit2-theme-glorious
yay -Syu lightdm-webkit2-theme-glorious
sudo pacman -S lightdm-webkit2-greeter\

sudo poweroff
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper50.jpg
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper51.jpg
.
clear
sudo poweroff
clear
yarn add @react-navigation/stack
npx expo install react-native-gesture-handler
yarn remove @react-navigation/native-stack
clear
git add .
git status
git commit -m "feat dark mode add"
clear
git add .
git commit -m "feat dark mode add"
git commit -m "feat: dark mode add"
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
sudo poweroff
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
sudo poweroff
bash
clear
bash
clear
ll -al
less .bash_history
cat .bash_history
sudo vi /etc/passwd
clear
sudo poweroff
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper52.jpg
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper53.jpg
cd .config/bspwm
cd rices
cd emilia
cat Theme.sh
clear
l;s
cat config.ini
cat launcher.rasi
code .
clear
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper52.jpg
feh --bg-scale Pictures/Wallpapers/wallpaperflare.com_wallpaper53.jpg
clear
picom
clear
lvim .config/alacritty/alacritty.yml
clear
clear
clear
clear
ranger
clear
ranger
lvim .config/ranger/rc.conf
clear
lvim .config/ranger/rc.conf
clear
clea
clear
cd Desktop/my-projects/todo-app/todo-client
clear
code .
ranger
clear
htop
clear
sudo pacman -S htop
htop
clear
clear
cd Desktop/my-projects/todo-app/todo-client
claer
clear
yarn start
clear
npx expo start --clear
clear
yarn start
clear
yarn start
clear
sudo poweroff
clear
git add .
git commit -m "home screen desing add"
clear
git add .
git commit -m "home screen desing create"
clear
git add .
git commit -m "material tab main navigator"
clea
rclear
clear
git branch dev
git checkout dev
clear
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
clear
npx expo start --clear
clear
npx expo start --clear
clear
npx expo start --clear
clear
yarn start
clear
sudo poweroff
cd Desktop
cd others
cd tmb-mvp-fer
clear
code .
cd web
pnpm start
pnpm dev:local
clear
sudo poweroff
clear
git add .
git commit -m "nothin"
clear
git checkout main
clear
yarn add axios
clear
yarn add react-query
clear
cd Desktop/my-projects/todo-app/todo-server
clear
cat package.json
pnpm start
code .
clear
pnpm start
clear
pnpm start
clear
pnpm start
clear
pnpm start
clear
pnpm start
clear
pnpm start
clear
pnpm start
clear
cd Desktop/my-projects/todo-app/todo-client
clear
clear
code .
yarn start
clear
npx expo start --clear
clear
npx expo start --clear
clear
npx expo start --clear
clear
yarn start
clear
npx expo start --clear
sudo poweroff
cd Documents
mkdir renovacion
cd Downloads
ls 
sudo poweroff
killall jortiz
clear
cd Desktop/others/tmb-mvp-fer
clear
clear
pnpm start:dev
cd web
clear
pnpm start:dev
c;ear
clear
cat package.json
clear
clear
pnpm dev:local
clear
yarn lint
clear
git add .
git commit -m "fix: routes create success"
clear
git add .
git commit -m "fix: routes create success"
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn strt
yarnm start
clear
yarn start
sudo poweroff
clear
echo 110 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
clear
sudo kill jortiz
clear
clea
clear
cd Desktop/my-projects/todo-app/todo-server
pnpm start
clear
ifconfig
cd Desktop/my-projects/todo-app/todo-server
pnpm start
clear
cd Desktop/my-projects/todo-app/todo-server
pnpm start
clear
yarn add react-hook-form @hookform/resolvers yup
clear
cd Desktop/my-projects/todo-app/todo-server
pnpm start
clear
yarn add zustand
clear
cd Desktop/my-projects/todo-app/todo-server
clear
pnpm start
clear
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
clear
cd Desktop/my-projects/todo-app/todo-server
l
clear
cd src
cd auth
cd user
cd entities
cat user.entity.ts
clear
sudo poweroff
clear
cd Desktop/my-projects/todo-app/todo-client
clear
npx expo install @react-native-async-storage/async-storage
clear
yarn start
npx expo start --clear
clear
yarn start
clear
npx expo start --clear
clear
git add .
git commit -m "fear: login page add"
git add .
git commit -m "fear: login page add"
clear
git push origin main
clear
cd Desktop/my-projects/todo-app/todo-server
clear
pnpm start
clear
pnpm start
sudo poweroff
clear
clea
clear
git add .
git status
clear
git commit -m "feat:update todo solve"
clear
git push origin main
git push origin dev
clear
git push
clear
cd Desktop/my-projects/todo-app/todo-client
code .
ifconfig
clear
git add .
git commit -m "feat: toast notifications add"
clear
cd Desktop/my-projects/todo-app/todo-server
code .
clear
pnpm start
pnpm start:dev
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
npx expo start --clear
clear
npx expo start --clear
clear
sudo poweroff
clear
cd Desktop/my-projects/todo-app/todo-client
clear
yarn start
clear
yarn start
CLEAR
clear
yarn start
clear
yarn start
clear
expo start --clear
cd Desktop/my-projects/todo-app/todo-client
clear
expo start --clear
clear
npx expo start --clear
clear
npx expo start --clear
clear
cd Desktop/my-projects/todo-app/todo-client
npx expo start --clear
yarn start
clear
sudo poweroff
cd Desktop/my-projects/todo-app/todo-client
clea
rclear
clear
yarn start
clear
cd Desktop/my-projects/todo-app/todo-client
clear
git add .
git init 
git add .
git commit -m "init commit"
clear
git remote add origin https://github.com/Jortizuwu/todo-nestjs-reactnative.git\
git push -u origin main
clear
cd Desktop/my-projects/todo-app/todo-client
clear
sudo rm .git
sudo rm -r .git
clear
clear
cle
clear
sudo poweroff
cd Desktop/my-projects/todo-app/todo-client
clear
git add .
git init
git add .
git submodule add todo-client
clear
sudo rm -r .git
clear
cd todo-client
git add /
git add .
git commit -m "slider card"
clear
sudo pacman -Syu
clear
cd Desktop/my-projects/todo-app/todo-client
clear
git init
git add .
git rm --cached todo-client
git rm -f --cached todo-client
git add .
git rm -f --cached todo-client
git status
git commit -m "init commit"
git remote add origin https://github.com/Jortizuwu/test.git\
git push -u origin main
sudo rm -r .git
clear
cd todo-server
git add .
git status
clear
git remote add origin https://github.com/Jortizuwu/todo-server.git\
git push -u origin main
cd todo-client
git remote add origin https://github.com/Jortizuwu/todo-client.git\
git push -u origin main
clear
touch README.md
lvim README.md
clear
lvim README.md
clear
git add .
git commit -m "readme.md add"
clear
git push origin main
clear
yarn start
npx expo start --clear
cd Desktop/my-projects/todo-app/todo-server
pnpm start
ifconfig
sudo poweroff
ifconfig
cd Desktop/my-projects/todo-app/todo-server
pnpm start
clear
cd Desktop/my-projects/todo-app/todo-client
yarn start
clear
yarn start
sudo poweroff
clear
sudo pacman -S steam
clear
yarn start
clear
pnpm start
clear
cd Desktop/my-projects/
clear
mkdir hw
cd hw
npx create-expo-app --template
clear
sudo rm -r hw
clear
yarn create expo-app hw -t
clear
pnpm create expo-app hw -t
clear
code .
cd hw
code .
cleare
clear
clear
sudo rm -r hw
clear
pnpm create expo-app hw -t
clear
cd hw
clear
pnpm start
npx expo install --fix
clear
pnpm start
pnpm
pnpm i
clear
cd Desktop/my-projects/
sudo rm -r hw
npx create-expo-app --template
cd hw
clear
npm start
code .
clear
npm start
clear
sudo poweroff
iftop
sudo pacman -S iftop
sudo poweroff
cd Desktop/my-dots
cd my-projects
clear
sudo rm -r hw
clear
mkdir chat-bot
cd chat-bot
yarn init -y
clear
yarn add gpt4all-ts
yarn add gpt4all
clear
lvim index.ts
clear
lvim index.ts
clear
node index.ts
code. 
code .
clear
cd Desktop/my-projects/todo-app/todo-server
cat package.json
cat tsconfig.json
clear
node index.ts
clear
yarn add -D @types/node
clear
node index.ts
clear
node index.ts
clear
bash
bash
nvim
cd Desktop/my-projects/todo-app/todo-server
nvim
clear
cd todo-client
nvim
cllear
clear
sudo thuner
clear
sudo thunar
cd Desktop/my-projects/todo-app/todo-server
cd cd ....
sudo rm test
sudo rm -r test
sudo rm -r wheater-app
clear
clear
npx create-expo-app --template
clear
cd wheater-app
sudo rm -r package-lock.json
sudo rm -r node_modules
clear
yarn
code .
clear
yarn start
npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar react-native-gesture-handler
clear
clear
cd Desktop/my-projects/wheater-app
yarn start
npx expo start --clear
clear
clear 
sudo rm -r wheater-app
clear
npx create-expo-app --template
cd wheater-app
sudo rm -r node_modules
sudo rm -r package-lock.json
yarn
clear
code .
celar
clear
yarn start
clear
npx expo start --clear
cclear
clear
sudo poweroff
clear
npx expo install @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons
clar
clear
npx expo remove @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons
clear
yarn add @tamagui/babel-plugin babel-plugin-transform-inline-environment-variables\
\
npx expo install react-native-reanimated\

clear
yarn add tamagui expo-font @tamagui/font-inter @tamagui/theme-base @tamagui/animations-react-native @tamagui/config react-native-web react-dom\

clear
yarn remove tamagui expo-font @tamagui/font-inter @tamagui/theme-base @tamagui/animations-react-native @tamagui/config react-native-web react-dom\
a
clear
yarn remove @tamagui/babel-plugin babel-plugin-transform-inline-environment-variables
npx expo delete @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons
npx expo remove @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons
clear
yarn add native-base
clear
npx expo install react-native-svg@12.1.1 react-native-safe-area-context@3.3.2
clear
npx expo install react-native-svg@12.1.1 react-native-safe-area-context@3.3.2
clear
cd Desktop/my-projects/wheater-app
clear
yarn start
clear
npx expo start --clear
clear
npx expo start --clear
clear
npx  expo start -c\

clear
yarn start
npx expo start --clear
npx expo install react-native-web@~0.19.6 react-dom@18.2.0
clear
npx expo start --clear
clear
npx expo start --clear
clear
sudo poweroff
cd Desktop/my-projects/wheater-app
clear
yarn start
clear
bspc exit
bspc quit
cd Downloads
unzip vecteezy_set-cloud-abstract-black-cloudy-vector-illustration_8442125_86.zip
yarn add react-native-tab-view
clear
npx expo install react-native-pager-view
clear
yarn remove react-native-tab-view
expo install react-native-pager-view
npx expo install react-native-pager-view
clear
npx expo install react-native-pager-view
clear
yarn install react-native-pager-view
yarn add react-native-pager-view
yarn remove react-native-pager-view
yarn add react-native-tab-view
yarn add react-native-pager-view
yarn add react-native-chart-kit
clear
cd Desktop/my-projects/wheater-app
yarn start
npx expo start --clear
sudo poweroff
npx expo install expo-blur
clear
cd Desktop/my-projects/wheater-app
yarn start
npx expo start --clear
sudo poweroff
sudo pacman -Syu
clear
cd Desktop/my-projects/wheater-app
yarn start
clear
clear
bspc quit
sudo poweroff
bspc node @parent -R 90
sudo poweroff
cd Desktop/my-projects
clear
cd chat-bot
clear
code .
sudo pacman -S build-essential libxi-dev libglu1-mesa-dev libglew-dev pkg-config
sudo yay -S build-essential libxi-dev libglu1-mesa-dev libglew-dev pkg-config
clear
yarn add brain.js
clear
node index.ts
clear
node index.ts
clear
yarn remove gpt4all
clear
node index.ts
yarn add gpu.js
yarn add  gpu.js@2.4.0
yarn add  gpu.js@2.4.0 -force
yarn add  gpu.js@2.4.0 --force
yarn add  gpu.js@2.16.0
yarn add gpu.js@"1.4.12
yarn add gpu.js@1.4.12
clear
node index.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node data.ts
clear
node index.ts
clear
node index.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index.ts
clear
node index.ts
clear
node index.ts
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
clear
node index1.ts
\
  code: 'ENOENT',
node index1.ts
sudo poweroff
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
yarn add typescript
yarn add typescript --offline
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clcear
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
clear
node index2.ts
 clear
node index2.ts
clear
node data.ts
node index1.ts
lvim
sudo poweroff
cd Desktop/my-projects
nest new chat-bot-api
cd chat-bot-api
clear
code .
git add .
git commit -m "init commit"
clear
nest g res bot --no-spec
clear
yarn add brain.js gpu.js@1.4.12
yarn add  whatsapp-web.js
clear
clear
yarn add typescript --offline
yarn add -D typescript
clear
node index1.ts
clear
node tsc index1.ts
npx tsc index1.ts
clear
npx tsc index1.ts
node index1.js
clear
npx tsc index1.ts
npx tsc index.ts
node index.js
npx tsc index.ts
node index.js
clear
npx tsc index.ts
node index.js
npx tsc index.ts
node index.js
npx tsc index.ts
node index.js
clear
node index.js
npx tsc index.ts
node index.js
clear
yarn add whatsapp-web.js\
 
clear
node server.js
clear
node server.js
clear
yarn add qrcode-terminal
clear
node server.js
lcear
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
clear
node server.js
lcear
clear
sudo poweroff
clear
cd Desktop
clear
bash
sudo bash
bash
cd Desktop/my-projects
sudo rm -r chat-bot-api
clear
clar
cles
clear
clear
sudo poweroff
cd Desktop
cd courses
mkdir practicies
cd practicies
clear
code .
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
node tree.js
clear
sudo poweroff
cd Desktop/others/tmb-mvp-fer
clear
code .
git pull origin MichaenDev
clear
clear
cd web
clear
pnpm dev:local
cd web
pnpm dev:local
cd Desktop/others/
clear
mkdir bylogic
cd bylogic
clear
npx vite create
sudo rm create
sudo rm -r create
clear
yarn create vite
clear
coode .
code .
clear
code .
clear
cd Desktop/templates
unzip Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
unzip Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
clear
code .
clear
sudo pacman -S p7zip
p7zip
sudo pacman -S peazip
clear
cd Desktop/templates
unzip Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
unzip Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
unzip Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
clear
sudo rm -r build
sudo rm -r __MACOSX
sudo rm -r Base\ -\ Free\ Tailwind\ Agency\ and\ Startup\ Template.zip
clear
sudo pacman -S peazip-qt-bin
clear
git clone https://aur.archlinux.org/peazip-qt-bin.git
cd peazip-qt-bin
makepkg -si
clear
git init
git add .
git commit -m "init commit"
clear
yarn add -D tailwindcss postcss autoprefixer
clear
npx tailwindcss init -p
clear
cd Desktop/templates
git clone https://github.com/cruip/tailwind-landing-page-template
cd tailwind-landing-page-template
yarn
code .
yarn
yarn dev
clear
cd Desktop/others/bylogic
code .
yarn add @headlessui/react
clear
yarn add aos
clear
yarn add @types/aos
clear
cl;ear
clear
yarn dev
clear
yarn dev
lcear
clear
yarn dev
clear
git add .
git commit -m "fear: v1.0.0"
git commit --amend -m "feat: " 
git commit --amend -m "feat: v.0.0.1" 
clear
git status
clear
yarn dev
clear
git add .
git commit -m "fix: vector color solve"
clear
yarn 
yarn dev
git add .
git commit -m "update README.md"
git remote add origin https://github.com/Jortizuwu/bylogic.git\
git branch -M main\
git push -u origin main
uptime
pfetch
clear
sudo poweroff
yarn dev
clea
clear
yarn add .
git add .
git commit -m "feat: email send with formsubmit"
clear
git push origin main
clear
git add .
git commit --ammed -m "feat: email send with formsubmit"
git commit --amend -m "feat: email send with formsubmit"
clear
git push origin main
git push origin main --force
clear
yarn dev
clear
git add .
git commit -m "fix: hero img solve"
git push origin main
clear
git add .
git commit -m "feat: _next add"
clear
git push origin main
clear
cd Desktop/others/tmb-mvp-fer
clear
code .
cd web
pnpm dev:local
sudo poweroff
cd Desktop/others/bylogic
clear
code .
yarn dev
clear
git add .
git commit -m "fix: opacity on mobile"
clear
git push origin main
clear
git add .
git commit -m "change mail"
clear
git push origin main
sudo poweroff
sudo pacman -Syu 
clear
cal
clear
sudo poweroff
bspc exit
bspc quit
yarn dev
clear
git add .
git commit -m "feat: meta data add"
git push origin main
clear
git add .
git commit -m "fix: img metadata solve"
clear
git push origin main
clear
yarn dev
git add .
git commit -m "fix: img link heat solve"
git commit --amend -m "fix: img link heat solve"
git status
git lg
clear
git add .
git commit --amend -m "fix: img link heat solve"
clear
git push origin main
git commit --amend -m "fix: img link head solve"
git lg
clear
git push origin main
git push origin main --force
clear
sudo poweroff
clear
yarn dev
git add .
git commit -m "fix: fav icon and icon on services"
git push origin main
clear
sudo pacman -Syu 
clear
sudo poweroff
yarn dev
sudo poweroff
yarn dev
clear
git add .
git commit -m "fix: pdf and wa link"
clear
git push origin main
clear
git add .
git commit -m "fix: text on services"
clear
git push origin main
clear
yarn dev
cd web
yarn dev
pnpm dev:local
cd Desktop/others/tmb-mvp-fer
code .
clear
cd web 
pnpm dev:local
sudo poweroff
cal
clear
day
cal -h
cal 3
cal 2023
clear
cal -h
cal 2023
sudo pacman -Syu 
clear
docker -v
clear
docker
clear
docker run hello-wordl
sudo docker run hello-wordl
docker start
docker start --help
docker start --a
docker start -a
docker start a
docker start i
clear
docker -v
sudo rc-service docker start
sudo pacman -S docker
clear
sudo docker version
sudo systemctl start docker.service
sudo rc-service docker.service start
clear
docker -h
clear
sudo pacman -S docker-openrc
sudo rc-update add docker default
sudo rc-service docker start
clea
rclear
clear
sudo usermod -aG docker $USER
clear
docker run hello-world
sudo docker run hello-world
clear
sudo docker run hello-world
sudo rc-service docker start
sudo rc-update add docker\

sudo rc-service docker start\

sudo rc-service docker status\

sudo pacman -S docker\

sudo rc-update add docker\

sudo rc-service docker stop\

docker status
sudo rc-service docker status\

sudo rc-service docker start\

sudo rc-service docker status\

sudo gpasswd -a tu_usuario docker\

sudo gpasswd -a jortiz docker\
\

clear
sudo rc-service docker status\

sudo journalctl -u docker\

sudo netstat -tulnp\

sudo pacman -Syu\

sudo pacman -Rns docker\
sudo pacman -S docker\

sudo rc-service docker start\

sudo rc-service docker status\

clear
sudo pacman -Rns docker
sudo rc-service docker stop
sudo pacman -Rns docker
sudo pacman -R docker
sudo rc-service docker stop\

sudo rc-update del docker\

sudo pacman -Rns docker\

[200~sudo rc-service docker stop
sudo rc-service docker stop\

sudo rc-update del docker\

sudo pacman -Rns docker-openrc\

sudo rm -rf /var/lib/docker\

sudo pacman -Rns docker\

clear
sudo pacman -R docker-desktop
rm -r $HOME/.docker/desktop\
 sudo rm /usr/local/bin/com.docker.cli\
 sudo pacman -Rns docker-desktop\

clear
rm -r $HOME/.docker/desktop\
 sudo rm /usr/local/bin/com.docker.cli\
 sudo pacman -Rns docker-desktop\

rm -r $HOME/.docker/desktop
sudo pacman -Rns docker-desktop
clear
sudo pacman -S docker\

clear
sudo pacman -S docker-openrc
sudo rc-update add docker default
sudo rc-service docker start\

sudo pacman -S docker-compose
sudo docker-compose ps\
\

clear
sudo docker-compose ps
clear
docker
sudo docker run hello-world
 systemctl start docker\

clear
sudo usermod -aG docker $USER
sudo docker run hello-world
sudo rc-service docker status\

ls -l /var/run/docker.sock\

sudo pacman -Rns docker-openrc\
sudo pacman -S docker-openrc\

sudo rc-service docker start\

clear
sudo docker componse version
sudo docker compose version
clear
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker
docker run hello-world
docker run --help
clear
lvim /etc/docker/
sudo lvim /etc/docker/
sudo lvim /etc/docker/daemon.json
sudo ls /etc/
docker ps -a
docker-openrc ps -a
sudo rc-service docker status\

clear
docker ps -a
sudo rc-service docker status\

sudo docker ps -a
clear
sudo poweroff
sudo lvim /etc/docker/daemon.json
clea
ls /etc/docker
clear
sudo ls /etc/docker
clear
cd /etc
sudo mkdir docker
cd .
clear
clear
sudo lvim /etc/docker/daemon.json
clear
docker ps -a
clear
sudo docker ps -a
clear
sudo docker run hello-world
clear
docker ps -a
sudo docker ps -a
clear
cd Desktop
cd courses
clear
mkdir docker
clear
l
sls
clear
 cd docker
unzip billingFront.zip
rm -r billingFront.zip
clear
cd billingFront
clear
lvim
clear
docker image ls
sudo docker image ls
clear
sudo docker ps -a
clear
docker image ls
sudo rc-service docker status\

rc-service docker status
rc-service docker start
clear
sudo docker pull hello-world
sudo docker container run hello-world
clear
sudo docker ps -a
clear
sudo docker rm hell-wordl
sudo docker ps -a
sudo docker container ls
sudo docker container ls -a
sudo docker container -h
sudo docker container rm 5d75aabada42 0e0fd6f3eea5
clear
sudo docker container ls -a
sudo docker image ls -a
sudo docker image rm 9c7a54a9a43c
clear
sudo docker image ls -a
sudo docker image ls
sudo docker image ls -al
sudo docker image ls -ll
ls al
ls -al
clear
sudo docker pull postgres
ckear
clear
sudo docker container run --name some-postgres -e POSTGRES_PASSWORD=1234 -d postgres
docker container ls
sudo docker container ls
clear
sudo docker container ls
sudo docker container rm b02
sudo docker container stop
sudo docker container stop b02
sudo docker container rm b02
clear
sudo docker container ls 
clear
sudo docker container run --name some-postgres -e POSTGRES_PASSWORD=1234 -dp 5432:5432 postgres
sudo docker container rm -f dcf
clear
sudo docker image ls 
sudo docker image ls -a
ckear
clear
sudo docker container run \\
--name postgres-alpha \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5432:5432 \\
postgres
clear
sudo docker container ls
sudo docker container run \\
--name postgres-alpha \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5432:5432 \\
postgres:14-alpine3.17
docker container ls
sudo docker container ls
sudo docker container run \\
--name postgres-alpha2 \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5432:5432 \\
postgres:14-alpine3.17
sudo docker container run \\
--name postgres-alpha2 \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5433:5432 \\
postgres:14-alpine3.17
sudo docker container run \\
--name postgres-alpha2 \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5432:5433 \\
postgres:14-alpine3.17
sudo docker container ls
sudo docker container ls -a
sudo docker container rm -f 12e
sudo docker container run \\
--name postgres-alpha2 \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5432:5433 \\
postgres:14-alpine3.17
sudo docker container rm -f 466
sudo docker container rm -f 68b
sudo docker container run \\
--name postgres-alpha2 \\
-e POSTGRES_PASSWORD=1234 \\
-dp 5433:5432 \\
postgres:14-alpine3.17
clear
sudo docker container ls -a
sudo docker container stop 673 103
sudo docker container rm 673 103
clear
docker pull mariadb:jammy
sudo docker pull mariadb:jammy
clear
sudo docker container ls -a
clear
sudo docker image ls -a
sudo docker container run 
sudo docker container run \\
--name mariadb \\
-e MARIADB_RANDOM_ROOT_PASSWORD=1234 \\
-dp 3306:3306 \\
postgres:jammy
sudo docker container run \\
--name mariadb \\
-e MARIADB_RANDOM_ROOT_PASSWORD=1234 \\
-dp 3306:3306 \\
mariadb:jammy
clear
sudo docker container ls -a
sudo docker container logs 918
sudo docker container logs 918 
sudo docker container logs 918 | less
clear
sudo docker container logs 918 | less
sudo docker container logs 918
clear
sudo docker container ls
sudo docker container ls -a
clear
sudo docker container ls -a
sudo docker container logs -f 918
clear
clear
sudo docker container ls -a
sudo docker container rm -f 918
clear
sudo docker image ls -a
sudo docker image rm 876 9fd
clear
sudo docker image ls -a
clear
sudo docker container ls -a
sudo docker image ls -a
clear
sudo pacman -Syu
clear
sudo groupadd docker
sudo usermod -aG docker $USER
usermod -aG docker $USER
sudo usermod -aG docker $USER
newgrp docker
sudo usermod -aG docker $USER
clear
sudo poweroff
sudo rc-service docker status\

clear
sudo poweroff
sudo pacman -Syu
clear
docker container ls
rc-service docker start
sudo rc-service docker start
sudo rc-service docker stop
sudo docker image ls -a
sudo rc-service docker start
sudo docker image ls -a
clear
clear
docker ps
sudo groupadd docker
sudo groupdel docker
sudo groupadd docker
 sudo gpasswd -a $USER docker
clear
 docker run hello-world
sudo rc-service docker enable
sudo rc-service -h
clear
clar
clear
sudo docker run container \  
sudo docker container run \\
--name world-db
sudo docker container run \\
--name world-db \\
-e MARIADB_USER=example-user \\
MARIADB_PASSWORD=1234 \\
MARIADB_ROOT_PASSWORD=yes \\
MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
mariadb:jammy
sudo docker\ run \\
--name world-db \\
-e MARIADB_USER=example-user \\
MARIADB_PASSWORD=1234 \\
MARIADB_ROOT_PASSWORD=yes \\
MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
mariadb:jammy
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
MARIADB_PASSWORD=1234 \\
MARIADB_ROOT_PASSWORD=yes \\
MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
mariadb:jammy
docker container ls
sudo docker container ls
clear
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
-e MARIADB_PASSWORD=1234 \\
-e MARIADB_ROOT_PASSWORD=yes \\
-e MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
mariadb:jammy
clear
sudo docker container log
sudo docker container ls
sudo docker container logs -f db6
clear
sudo kill table-plues
sudo kill table-plus
clear
htop
sudo docker container rm -f db6
clear
sudo docker -v create world-db
sudo docker volume create world-db
clear
sudo docker volume ls
sudo docker volume inspect world-db
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
-e MARIADB_PASSWORD=1234 \\
-e MARIADB_ROOT_PASSWORD=yes \\
-e MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
mariadb:jammy
sudo docker container rm -f 86c
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
-e MARIADB_PASSWORD=1234 \\
-e MARIADB_ROOT_PASSWORD=yes \\
-e MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\\
mariadb:jammy
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
-e MARIADB_PASSWORD=1234 \\
-e MARIADB_ROOT_PASSWORD=yes \\
-e MARIAD_DATABASE=world-db \\
-dp 3306:3306 \\
--volume world-db:/var/lib/mysql \\
mariadb:jammy
clear
mysql
clear
sudo docker container rm -f 86c
sudo docker container rm -f 950
sudo docker run \\
--name world-db \\
-e MARIADB_USER=example-user \\
-e MARIADB_PASSWORD=1234 \\
-e MARIADB_ROOT_PASSWORD=yes \\
-e MARIAD_DATABASE=world-db \\
-dp 3307:3306 \\
--volume world-db:/var/lib/mysql \\
mariadb:jammy
sudo rc-service -h
sudo rc-service -l
cal
sudo poweroff
sudo pacman -Syu
clear
sudo poweroff
cd Desktop/courses/docker
unzip nest-graphql-app.zip
sudo rm -r __MACOSX
sudo rm -r nest-graphql-app.zip
clear
cd nest-graphql
clar
clear
docker container run \\
--name nest-app \\
-w /app \\
-p 80:3000 \\
-v "$(pwd)":/app \\
node:16.alpine3.16 \\
sh -c "yarn install && yarn start:dev"
sudo docker container run \\
--name nest-app \\
-w /app \\
-p 80:3000 \\
-v "$(pwd)":/app \\
node:16.alpine3.16 \\
sh -c "yarn install && yarn start:dev"
sudo docker container run \\
--name nest-app \\
-w /app \\
-p 80:3000 \\
-v "$(pwd)":/app \\
node:16-alpine3.16 \\
sh -c "yarn install && yarn start:dev"
cat package.json
clear
docker container ls -a
sudo docker container ls -a
sudo docker container ls
sudo docker container ls -a
sudo docker image ls -a
sudo docker image rm 001 888
sudo docker image rm 011 888
sudo docker container rm -f 7de 017
sudo docker image rm 011 888
clear
sudo docker image ls
sudo docker image ls -a
sudo docker container ls -a
sudo docker container run \\
--name nest-app \\
-w /app \\
-p 80:3000 \\
-v "$(pwd)":/app \\
node:18.17.0-alpine3.18 \\
sh -c "yarn install && yarn start:dev"
sudo docker container ls -a
sudo docker container exec -it e1e /bin/sh
clear
clear
docker container ls -a
sudo docker container ls -a
sudo docker container stop 391
clear
sudo docker container rm 391
clear
cd Desktop/courses/docker/nest-graphql
clear
clear
sudo docker container ls -a
sudo docker container run \\
--name nest-app \\
-w /app \\
-dp 80:3000 \\
-v "$(pwd)":/app \\
node:18.17.0-alpine3.18 \\
sh -c "yarn install && yarn start:dev"
docker container logs -f e1e
sudo docker container logs -f e1e
clear
clear
sudo docker container ls
clear
sudo docker container rm -f e1e
clear
sudo docker image ls
sudo docker image ls -a
clear
sudo docker image pull postgres:15.1
clear
sudo docker container ls
clear
docker container run \\
--name nest-app \\
-w /app \\
-p 80:3000 \\
node:16.alpine3.16\

docker container run \\
--name pgAdmin \\
-e PGADMIN_DEFAUULT_PASSWORD=123456 \\
-p 80:3000 \\
\
node:16.alpine3.16\

CLEAR
clear
sudo docker container run \\
--name pgAmdin \  
sudo docker container run \\
--name pgAmdin \\
-e PGADMIN_DEFAULT_PASSWORD=123456 \\
-e PGADMIN_DEFAULT_EMAIL=joseher2511@gmail.com \\
dp 8080:80 \\
dpage/pgamdin4:6.17
sudo docker container run \\
--name pgAmdin \\
-e PGADMIN_DEFAULT_PASSWORD=123456 \\
-e PGADMIN_DEFAULT_EMAIL=joseher2511@gmail.com \\
-dp 8080:80 \\
dpage/pgamdin4:6.17
sudo docker container run \\
--name pgAmdin \\
-e PGADMIN_DEFAULT_PASSWORD=123456 \\
-e PGADMIN_DEFAULT_EMAIL=joseher2511@gmail.com \\
-dp 8080:80 \\
dpage/pgadmin4:6.17
clear
sudo docker container run \\
-d \\
--name postgres-db \\
-e POSGRES_PASSWORD=123456 \\
-v postgres-db:/var/lib/postgresql/data \\
postgres:15.1
sudo docker container ls
sudo docker container ls -a
sudo docker container start 0f3
sudo docker container start 0f4
clear
sudo docker container ls -a
sudo docker network 
sudo docker network create db
sudo docker container start 0f4 -p 5432:5432
sudo docker container start 0f4 p 5432:5432
clear
sudo docker container start 0f4 network db
sudo docker container start 0f4 -network db
sudo docker container ls
sudo docker container run \\
-d \\
--name postgres-db \\
-e POSGRES_PASSWORD=123456 \\
-v postgres-db:/var/lib/postgresql/data \\
postgres:15.1
clear
sudo docker network ls
sudo docker network connect db 0f4
sudo docker container ls
sudo docker network connect db 0c8
sudo docker container ls
sudo docker container ls -a
sudo docker container rm -f 0f4
clear
sudo docker container run \\
-d \\
--name postgres-db \\
-e POSGRES_PASSWORD=123456 \\
-v postgres-db:/var/lib/postgresql/data \\
postgres:15.1
sudo docker container ls
sudo docker container rm -f d2e
sudo docker run --name postgres-db -e POSTGRES_PASSWORD=123456 -d postgres:16.1
sudo docker run --name postgres-db -e POSTGRES_PASSWORD=123456 -d postgres:15.1
sudo docker container ls
sudo docker network connect db 81d
clear
sudo docker container rm -f 81d 0c8\\

clear
clea
clear
cd Desktop/courses/docker
cd nest-graphql
clear
lvim docker-compose.yml
sudo docker componse
clear
sudo docker componse up
sudo docker componser up
sudo docker compose version
sudo docker compose up
clear
sudo docker compose up
\:
clear
sudo docker compose up
clear
sudo docker compose stop
clear
sudo docker compose up 
clear
sudo docker compose up 
clear
docker compose down
sudo docker compose down
sudo docker network ls
sudo docker volum ls
sudo docker volume ls
sudo docker volume rm nest-graphql_postgres-db
sudo docker volume rm postgres-db
sudo docker volume rm wordl-db
sudo docker volume rm world-db
clear
sudo docker volume create postgres-db
clear
sudo poweroff
sudo docker compose down
clear
sudo docker volume ls
sudo docker volume rm postgres-db
clear
cd Desktop/courses/docker
cd nest-graphql
clear
lvim docker-compose.yml
code .
clear
mkdir pokemon-app
cd pokemon-app
clear
lvim docker-compose.yml
sudo docker compose up
clear
sudo docker compose down
sudo docker container ls
sudo docker container ls -a
clear
sudo docker compose up
touch .env
clear
sudo powe
sudo poweroff
sudo docker container ls -a
sudo docker container rm -f d39\

clear
sudo pacman -Syu
cat /etc/pacman.conf
lvim /etc/pacman.conf
clear
lvim /etc/pacman.conf
clear
sudo lvim /etc/pacman.conf
clear
sudo pacman -Syu
node app.js
clear
node app.js
clear
yarn start
clear
yarn start
clear
sudo docker build --tag cron-ticker .
clear
sudo docker image ls -a
sudo docker image rm fb5
clear
sudo docker image ls
sudo docker image ls -a
clear
sudo docker image ls -a
clear
sudo docker image ls
sudo docker container ls
sudo docker container ls -a
sudo docker container run --name test cron-ticker
sudo docker container ls -a
sudo docker container stop 3c7
clear
sudo docker container start 3c7
sudo docker container logs -f 3c7
clear
sudo docker container stop 3c7
clear
sudo docker container ls
clear
sudo docker container ls
sudo docker container ls -a
sudo docker container ls
sudo docker container stop 3a4
sudo docker container ls
sudo docker container ls -a
clear
sudo docker container -h
clear
sudo docker container ls
sudo docker container ls -a
sudo docker container start 3a4
sudo docker container stop 3a4
clear
sudo docker container run 3a4
clear
sudo docker container ls
clear
sudo docker container ls -a
sudo docker container start 3a4
sudo docker container logs 3a4
sudo docker container logs 3a4 -g
sudo docker container logs 3a4 -f
clear
sudo docker container rm -f 3a4
sudo docker container rm -f 3c7
clear
sudo docker container run --name luffy cron-ticker:luffy -d
sudo docker container run --name luffy cron-ticker:luffy d
sudo docker container ls
clear
sudo docker container ls -a
sudo docker container rm df0
clear
sudo docker container ls -a
sudo docker container 3f5 stop
sudo docker container stop 4f5
sudo docker container stop 3f5
clear
sudo docker container ls
sudo docker container ls -a
clear
sudo docker container ls -a
sudo docker image ls -a
clear
sudo docker image tag cron-ticker cron-ticker:luffy
sudo docker image ls -a
sudo docker image tag cron-ticker cron-ticker:zoro
sudo docker image ls -a
clear
sudo docker container ls -a
sudo docker container rm 4f5
clear
sudo docker container ls -a
sudo docker container run --name test cron-ticker
clear
history 
clear
sudo docker build --tag cron-ticker .
sudo docker image ls -a
sudo docker image rm cron-ticker:zoro
sudo docker image rm zoro
sudo docker image rm --tag zoro
sudo docker image rm --help
sudo docker image prume
sudo docker image prune
clear
sudo docker image ls
sudo docker image ls -a
sudo docker image ls
clear
sudo docker image ls
sudo docker image --tag cron-ticker cron-ticker:zore
sudo docker image --tag cron-ticker cron-ticker:zoro
sudo docker image tag cron-ticker cron-ticker:zoro
clear
sudo docker image ls
clear
sudo docker image prune
sudo docker image ls
clear
sudo docker container run --name test-zoro cron-ticker:zoro
clear
node app.js
clear
node app.js
clear
sudo docker image ls
clear
sudo docker image ls
clear
yarn add -D jest
clear
yarn test
clear
yarn test
clear
yarn test
clear
sudo docker build --tag cron-ticker .
clear
sudo docker build --tag cron-ticker .
sudo docker image ls
clear
sudo docker image tag cron-ticker cron-ticker:nami
sudo docker container ls -a
sudo docker image ls -a
sudo docker image ls
clear
cd Desktop/courses/docker
kls
l
clear
mkdir cron-ticker
cd cron-ticker
cclear
clear
yarn init
clear
lvim app.js
clear
yarn add node-cron
clear
ll
clear
lvim app.js
code .
sudo poweroff
sudo pacman -Syu
sudo poweroff
cd Desktop
clear
clear
cd Desktop
cdlear
clear
cd Pictures
l
ll
cd Wallpapers
l
clear
git add .
git init
git add .
git commit -m "init commit"
clear
ll
clear
rm -r .git
sudo rm -r .git
clear
cd Wallpapers 
cp Wallpapers ~/Desktop/my-dots
cp Wallpapers -r ~/Desktop/my-dots
cd 
cd Desktop/my-dots/ls
cd Desktop/my-dots/
git push origin main
git pull origin main
git push origin main
git add .
git commit -m "wallpapers\
"
git push origin main
clear
sudo poweroff
